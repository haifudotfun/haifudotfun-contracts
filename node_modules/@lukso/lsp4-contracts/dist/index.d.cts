import { Verification, LSP2ArrayKey } from '@lukso/lsp2-contracts';

type LSP4DigitalAssetMetadataJSON = {
    LSP4Metadata: LSP4DigitalAssetMetadata;
};
type LSP4DigitalAssetMetadata = {
    name: string;
    description: string;
    links: LinkMetadata[];
    images: ImageMetadata[][];
    assets: AssetMetadata[];
    icon: ImageMetadata[];
    attributes?: AttributeMetadata[];
};
type ImageMetadata = {
    width: number;
    height: number;
    verification?: Verification;
    url: string;
};
type LinkMetadata = {
    title: string;
    url: string;
};
type AttributeMetadata = {
    key: string;
    value: string;
    type: string | number | boolean;
};
type AssetMetadata = AssetFile | DigitalAsset;
type AssetFile = {
    url: string;
    verification?: Verification;
    fileType?: string;
};
type DigitalAsset = {
    address: string;
    tokenId?: string;
};
declare const LSP4SupportedStandard: {
    key: string;
    value: string;
};
declare const LSP4DataKeys: {
    SupportedStandards_LSP4: string;
    LSP4TokenName: string;
    LSP4TokenSymbol: string;
    LSP4TokenType: string;
    LSP4Metadata: string;
    LSP4CreatorsMap: string;
    'LSP4Creators[]': LSP2ArrayKey;
};
/**
 * @dev List of LSP4 Token types to describe the type of token a digital asset contract represents.
 * @see for details see: https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-4-DigitalAsset-Metadata.md#lsp4tokentype
 */
declare const LSP4_TOKEN_TYPES: {
    TOKEN: number;
    NFT: number;
    COLLECTION: number;
};

export { type AssetFile, type AssetMetadata, type AttributeMetadata, type DigitalAsset, type ImageMetadata, LSP4DataKeys, type LSP4DigitalAssetMetadata, type LSP4DigitalAssetMetadataJSON, LSP4SupportedStandard, LSP4_TOKEN_TYPES, type LinkMetadata };
